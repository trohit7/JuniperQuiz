apiVersion: v1
data:
  release: 
kind: Secret
metadata:
  creationTimestamp: "2023-10-30T04:59:09Z"
  labels:
    modifiedAt: "1698641949"
    name: kube-backups
    owner: helm
    status: deployed
    version: "1"
  name: sh.helm.release.v1.kube-backups.v1
  namespace: default
type: helm.sh/release.v1
